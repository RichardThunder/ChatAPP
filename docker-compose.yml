services:
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    environment:
#      - SPRING_PROFILES_ACTIVE=dev
      - GEMINI_API_KEY=${GEMINI_API_KEY}
    volumes:
      - ./backend:/app
    networks:
      - app-network
    depends_on:
      - postgres
    restart: no

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "3000:80"
    depends_on:
      - backend
    networks:
      - app-network
    restart: no

  postgres:
    image: postgres:15-alpine
    environment:
      - POSTGRES_DB=chatapp
      - POSTGRES_USER=chatapp
      - POSTGRES_PASSWORD=chatapp123
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/src/main/resources/db/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    networks:
      - app-network
    restart: unless-stopped

networks:
  app-network:
    driver: bridge

volumes:
  postgres_data: